Your company has recently decided to use Docker to run containers in production. 
They have built some Docker images to run their own proprietary software and need a place to store and manage these images. 
You have been asked to build a secure, private Docker registry for use by the company. 
In order to verify that everything works, you have also been asked to configure a Docker workstation server to push to and pull from the registry.

To complete this lab, ensure that the following requirements are met for the registry:

1. A private Docker registry is running on the Docker registry server using version 2 of the registry image.
2. The container name for the registry should be registry.
3. The registry should always automatically restart if it stops or the Docker daemon or server restarts.
4. Set up an initial account with the username docker and the password d0ck3rrU73z.
5. The registry should use TLS with a self-signed certificate.
6. The registry should listen on port 443.

step1: Set up an initial account with the username docker and the password d0ck3rrU73z

		mkdir auth
		
		docker run --entrypoint htpasswd registry:2 -Bbn Docker d0ck3rrU73z > auth/htpasswd

step2 :The registry should use TLS with a self-signed certificate.
		
		mkdir certs

		openssl req \
		-newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key \
		-x509 -days 365 -out certs/domain.crt
		
step3	A private Docker registry is running on the Docker registry server using version 2 of the registry image.
		The container name for the registry should be registry.
		The registry should always automatically restart if it stops or the Docker daemon or server restarts.
		The registry should listen on port 443
		 
		docker run -d \
		-p 443:443 \
		--restart=always \
		--name registry \
		-v `pwd`/auth:/auth \
		-e "REGISTRY_AUTH=htpasswd" \
		-e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
		-e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
		-v `pwd`/certs:/certs \
		-e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
		-e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
		registry:2


Set up the Docker workstation server to meet the following requirements:

1. Docker is logged in to the private registry.
	docker login 172.31.20.121
	Username: Docker
	Password: d0ck3rrU73z
	
2. Docker is configured to accept the self-signed cert. Do not turn off certificate verification using the insecure-registries setting.
3. To confirm that everything is working, push a test image called ip-10-0-1-101:443/test-image:1 to the private registry. Y
ou can pull any image from Docker hub and tag it with ip-10-0-1-101:443/test-image:1 as a test.
	docker tag tomcat 172.31.20.121/tomcat
	docker push 172.31.20.121/tomcat

4. Delete the test image locally and pull it from the registry.
	 docker rmi 172.31.20.121/tomcat
	 docker pull 172.31.20.121/tomcat	

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!




